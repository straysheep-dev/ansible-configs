---
# build_kali_desktop/tasks/config.yml

# Make general configuration changes with this role

# Refresh SSH host keys (useful if this is a pre-installed VM)
- name: "Reset OpenSSH Server Host Keys"
  ansible.builtin.shell: |
    rm -rf /etc/ssh/*host*
    ssh-keygen -A
  args:
    executable: /bin/bash
  become: yes
  become_method: sudo

# Adjust proxychains timeout for scanning tools
- name: "Configure proxychains read timeout for scanning optimization"
  ansible.builtin.lineinfile:
    path: /etc/proxychains4.conf
    regexp: '^#?tcp_read_time_out.*$'
    line: tcp_read_time_out 5000
  become: yes
  become_method: sudo

- name: "Configure proxychains connect timeout for scanning optimization"
  ansible.builtin.lineinfile:
    path: /etc/proxychains4.conf
    regexp: '^#?tcp_connect_time_out.*$'
    line: tcp_connect_time_out 800
  become: yes
  become_method: sudo

# Installs a hardened Firefox policy
- name: "Create Firefox policy folder"
  ansible.builtin.file:
    state: directory
    mode: '0755'
    owner: root
    group: root
    path: /etc/firefox/policies
  become: yes
  become_method: sudo

- name: "Install Firefox policies.json"
  ansible.builtin.copy:
    remote_src: no
    src: firefox-policies-kali.json
    dest: /etc/firefox/policies/policies.json
    mode: '0644'
    owner: root
    group: root
  become: yes
  become_method: sudo

# Apply apparmor policy to Firefox
- name: "Ensure Firefox apparmor policy is not disabled"
  ansible.builtin.file:
    path: /etc/apparmor.d/disable/usr.bin.firefox-esr
    state: absent
  become: yes
  become_method: sudo

- name: "Install Firefox apparmor policy files"
  ansible.builtin.copy:
    remote_src: no
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "apparmor-usr.bin.firefox-esr", dest: "/etc/apparmor.d/usr.bin.firefox-esr" }
    - { src: "apparmor-firefox.abstractions", dest: "/etc/apparmor.d/abstractions/ubuntu-browsers.d/firefox-esr" }
    - { src: "apparmor-usr.bin.firefox.local", dest: "/etc/apparmor.d/local/usr.bin.firefox-esr" }
  become: yes
  become_method: sudo

- name: "Enable and start apparmor service"
  ansible.builtin.service:
    name: apparmor
    state: started
    enabled: yes
  become: yes
  become_method: sudo

- name: "Reload Firefox apparmor profile"
  ansible.builtin.shell: |
    apparmor_parser -r /etc/apparmor.d/usr.bin.firefox-esr
  args:
    executable: /bin/bash
  become: yes
  become_method: sudo

- name: "Register apparmor status"
  ansible.builtin.shell: |
    aa-status | grep -i 'firefox'
  args:
    executable: /bin/bash
  register: apparmor_status
  become: yes
  become_method: sudo

- name: "Print apparmor status"
  ansible.builtin.debug:
    msg: "{{ apparmor_status.stdout }}"

# Create a dot folder for web app sec proxy certs
- name: "Create ~/.appsec_certs"
  ansible.builtin.file:
    path: "/home/{{ ansible_facts['env']['USER'] }}/{{ item.dest }}"
    state: directory
    mode: '0755'
  loop:
    - { dest: ".appsec_certs" }

# =========
# Burpsuite
# =========
- name: "Register if Burpsuite CA exists"
  ansible.builtin.stat:
    path: /usr/local/share/ca-certificates/burpsuite.der
  register: burpsuite_cert

# https://github.com/IppSec/parrot-build/blob/master/roles/customize-browser/files/getburpcert.sh
# https://portswigger.net/burp/documentation/desktop/troubleshooting/launch-from-command-line
# /usr/bin/java: symbolic link to /etc/alternatives/java
# /etc/alternatives/java: symbolic link to /usr/lib/jvm/java-17-openjdk-amd64/bin/java
- name: "Export Burpsuite certificate"
  ansible.builtin.shell: |
    /bin/bash -c "echo 'y' | java -Djava.awt.headless=true -jar /usr/share/burpsuite/burpsuite.jar &"
    sleep 30
    curl http://localhost:8080/cert -o /tmp/burpsuite.der
    pkill -f burpsuite.jar
  args:
    executable: /bin/bash
  when: not burpsuite_cert.stat.exists

- name: "Install Burpsuite certificate"
  ansible.builtin.copy:
    remote_src: yes
    src: /tmp/burpsuite.der
    dest: /usr/local/share/ca-certificates/
    mode: '0644'
    owner: root
    group: root
  when: not burpsuite_cert.stat.exists
  become: yes
  become_method: sudo

# TO DO: Burpsuite config template
# - localhost:8081
# - Dark UI

# =========
# OWASP ZAP
# =========
- name: "Register if ZAProxy CA exists"
  ansible.builtin.stat:
    path: /usr/local/share/ca-certificates/zaproxy.cer
  register: zaproxy_cert

# https://www.zaproxy.org/docs/desktop/cmdline/
# https://www.zaproxy.org/docs/desktop/addons/network/cmdline/
- name: "Export ZAP certificate"
  ansible.builtin.shell: |
    owasp-zap -cmd -certpubdump /tmp/zaproxy.cer
  when: not zaproxy_cert.stat.exists

- name: "Install ZAProxy certificate"
  ansible.builtin.copy:
    remote_src: yes
    src: /tmp/zaproxy.cer
    dest: /usr/local/share/ca-certificates/
    mode: '0644'
    owner: root
    group: root
  when: not zaproxy_cert.stat.exists
  become: yes
  become_method: sudo

# TO DO: ZAProxy config template
# - No HUD
# - localhost:8082
# - Protected mode by default
# - Dark UI