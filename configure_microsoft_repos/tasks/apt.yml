---
# configure_microsoft_repos/tasks/apt.yml

# This file should work for any role where you need to add the Microsoft Linux repository information.
# # When additional information is required (e.g. repo information for vscode) it will be handled by that role.

# First obtain, verify, and install the information.
# https://github.com/microsoft/linux-package-repositories#signature-verification

# https://learn.microsoft.com/en-us/linux/packages#how-to-install-microsoft-software-packages-using-the-linux-repository
# https://packages.microsoft.com/keys/microsoft.asc
# Public Key ID: Microsoft (Release signing) gpgsecurity@microsoft.com
# Public Key Fingerprint: BC52 8686 B50D 79E3 39D3 721C EB3E 94AD BE12 29CF
# https://packages.microsoft.com/config/
# https://packages.microsoft.com/config/ubuntu/22.04/
- name: Obtain Microsoft Signing Key
  ansible.builtin.get_url:
    url: https://packages.microsoft.com/keys/microsoft.asc
    dest: /tmp/microsoft.asc
    mode: '0644'

# https://learn.microsoft.com/en-us/linux/packages#how-to-use-the-gpg-repository-signing-key
- name: Verify Microsoft signing key
  ansible.builtin.shell: |
    gpg /tmp/microsoft.asc | grep -P "BC52\s?8686\s?B50D\s?79E3\s?39D3\s?\s?721C\s?EB3E\s?94AD\s?BE12\s?29CF"
  args:
    executable: /bin/bash

# https://github.com/microsoft/linux-package-repositories#verify-the-signature-of-an-individual-deb
- name: Install debsig-verify package
  ansible.builtin.apt:
    pkg:
      - debsig-verify
    state: latest
    update_cache: yes
  become: yes
  become_method: sudo

- name: Create the keyring folders
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    mode: '0755'
    owner: root
    group: root
  loop:
    - /usr/share/debsig/keyrings/EB3E94ADBE1229CF/
    - /etc/debsig/policies/EB3E94ADBE1229CF/
  become: yes
  become_method: sudo

# Check and register this to prevent being prompted to overwrite the key
- name: Check if the GPG key exists
  ansible.builtin.stat:
    path: /usr/share/debsig/keyrings/EB3E94ADBE1229CF/microsoft.gpg
  register: key_exists

- name: Install the signing key as GPG (non-ascii)
  ansible.builtin.shell: |
    gpg -o /usr/share/debsig/keyrings/EB3E94ADBE1229CF/microsoft.gpg --dearmor /tmp/microsoft.asc
  args:
    executable: /bin/bash
  when: key_exists.stat.exists == false
  become: yes
  become_method: sudo

- name: Ensure read permission on signing key
  ansible.builtin.file:
    path: /usr/share/debsig/keyrings/EB3E94ADBE1229CF/microsoft.gpg
    owner: root
    group: root
    mode: '0644'
  become: yes
  become_method: sudo

- name: Create a debsig-verify policy file
  ansible.builtin.copy:
    dest: /etc/debsig/policies/EB3E94ADBE1229CF/microsoft.pol
    mode: '0644'
    owner: root
    group: root
    content: |
      <?xml version="1.0"?>
      <!DOCTYPE Policy SYSTEM "https://www.debian.org/debsig/1.0/policy.dtd">
      <Policy xmlns="https://www.debian.org/debsig/1.0/">

        <Origin Name="Microsoft" id="EB3E94ADBE1229CF" Description="gpgsecurity@microsoft.com"/>

        <Selection>
          <Required Type="origin" File="microsoft.gpg" id="EB3E94ADBE1229CF"/>
        </Selection>

        <Verification MinOptional="0">
          <Required Type="origin" File="microsoft.gpg" id="EB3E94ADBE1229CF"/>
        </Verification>

      </Policy>
  become: yes
  become_method: sudo

- name: Obtain the DEB Repo Config Package
  ansible.builtin.get_url:
    url: https://packages.microsoft.com/config/{{ ansible_facts["distribution"] | lower }}/{{ ansible_facts["distribution_version"] }}/packages-microsoft-prod.deb
    dest: /tmp/packages-microsoft-prod.deb
    mode: '0644'

- name: Verify the DEB Repo Config Package
  ansible.builtin.shell: |
    debsig-verify /tmp/packages-microsoft-prod.deb
  args:
    executable: /bin/bash

- name: Install the DEB Repo Config Package
  ansible.builtin.apt:
    deb: /tmp/packages-microsoft-prod.deb
  become: yes
  become_method: sudo

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 0
  become: yes
  become_method: sudo

# Register which sources your package manager uses for .NET
- name: Register package source for .NET
  ansible.builtin.shell: |
    apt-cache policy '?name(dotnet.*)' | grep -v microsoft | grep '/ubuntu' | cut -d"/" -f3 | sort -u
  args:
    executable: /bin/bash
  register: dotnet_sources

# Split the dotnet_sources into a list
# https://docs.ansible.com/ansible/latest/reference_appendices/common_return_values.html#stdout-lines
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/split_filter.html

# Either prioritize your distro's package archive for .NET packages, or Microsoft's feed.
# Defaults to your distro's packages, change this in vars/main.yml.
#https://learn.microsoft.com/en-us/dotnet/core/install/linux-package-mixup?pivots=os-linux-ubuntu#whats-going-on

# Only adds or removes these lines, if /etc/apt/preferences.d/microsoft-prod exists it will not modify any other lines
# This loop does not work with the ansible.builtin.copy module, it will overwrite itself on each iteration
# So does ansible.builtin.blockinfile without this syntax using "marker": https://github.com/ansible/ansible-modules-extras/issues/1592
- name: Set package priority for Microsoft feed
  ansible.builtin.blockinfile:
    state: present
    create: yes
    append_newline: yes
    path: /etc/apt/preferences.d/microsoft-prod
    mode: '0644'
    owner: root
    group: root
    block: |
      Package: dotnet* aspnet* netstandard*
      Pin: origin "{{ item }}"
      Pin-Priority: -10
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{item}}"
  with_items:
    - "{{ dotnet_sources.stdout_lines }}"
  when: prioritize_microsoft_feed == "true"
  become: yes
  become_method: sudo

- name: Unset package priority for Microsoft feed
  ansible.builtin.blockinfile:
    state: absent
    create: yes
    append_newline: yes
    path: /etc/apt/preferences.d/microsoft-prod
    mode: '0644'
    owner: root
    group: root
    block: |
      Package: dotnet* aspnet* netstandard*
      Pin: origin "{{ item }}"
      Pin-Priority: -10
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{item}}"
  with_items:
    - "{{ dotnet_sources.stdout_lines }}"
  when: prioritize_microsoft_feed == "false"
  become: yes
  become_method: sudo

- name: Set package priority for Linux archive
  ansible.builtin.blockinfile:
    state: present
    create: yes
    path: /etc/apt/preferences.d/microsoft-prod
    mode: '0644'
    owner: root
    group: root
    block: |
      Package: dotnet* aspnet* netstandard*
      Pin: origin "packages.microsoft.com"
      Pin-Priority: -10
  when: prioritize_microsoft_feed == "false"
  become: yes
  become_method: sudo

- name: Unset package priority for Linux archive
  ansible.builtin.blockinfile:
    state: absent
    create: yes
    path: /etc/apt/preferences.d/microsoft-prod
    mode: '0644'
    owner: root
    group: root
    block: |
      Package: dotnet* aspnet* netstandard*
      Pin: origin "packages.microsoft.com"
      Pin-Priority: -10
  when: prioritize_microsoft_feed == "true"
  become: yes
  become_method: sudo
